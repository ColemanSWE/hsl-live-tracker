name: PR Check
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: git clean -ffdx  
      - run: npm ci
      - run: npm run build
      - run: npm run test:ci

  preview:
    name: Deploy Preview
    needs: test
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      pull-requests: write
    environment: preview
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run build
        env:
          VITE_BASE_URL: /hsl-live-tracker/previews/pr-${{ github.event.number }}/
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          target-hosting: github-pages
          environment: preview
          github-token: ${{ secrets.GITHUB_TOKEN }}
          preview-url: true
      - name: Create Preview Comment
        uses: actions/github-script@v7
        with:
          script: |
            const url = `https://colemanswe.github.io/hsl-live-tracker/previews/pr-${{ github.event.number }}/`
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Preview deployment available at: [${url}](${url})`
            })

      - name: Report Status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const { job, conclusion } = context.payload.workflow_run || {};
            if (conclusion === 'failure') {
              core.setFailed('Tests must pass before merging');
            } 